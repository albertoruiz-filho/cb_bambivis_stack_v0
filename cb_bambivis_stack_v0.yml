services:
  # Serviço PostgreSQL para o Canoa Bahia CRM/ERP
  canoabahia_db:
    image: postgres:15-alpine
    container_name: canoabahia_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: canoabahia_crm
      POSTGRES_USER: canoabahia_user
      POSTGRES_PASSWORD: amelofil90 # MUDE ISTO PARA UMA SENHA FORTE!
    volumes:
      - canoabahia_db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d # Para scripts de inicialização
    networks:
      - canoabahia_network # Rede interna para os serviços da aplicação

  # Serviço Directus (Backend/API e CMS)
  canoabahia_directus:
    image: directus/directus:10.10.3 # Versão estável
    container_name: canoabahia_directus
    restart: unless-stopped
    # Não expomos a porta 8055 diretamente para o host,
    # pois o NGINX Proxy Manager fará o roteamento interno.
    # ports:
    #   - "8055:8055"
    environment:
      KEY: ss09iouzOOKcNAiPqjFGdinJXprCuV1Wj8r0x8ftcIU # MUDE ISTO! Explicação abaixo.
      SECRET: d5df39ebf5520cc029cd238c96d2976b56b3c9c982081a2612ac09818685758e # MUDE ISTO! Explicação abaixo.
      DB_CLIENT: pg
      DB_HOST: canoabahia_db # Nome do serviço do banco de dados no docker-compose
      DB_PORT: 5432
      DB_DATABASE: canoabahia_crm
      DB_USER: canoabahia_user
      DB_PASSWORD: amelofil90 # MUDE ISTO! Deve ser a mesma do canoabahia_db
      ADMIN_EMAIL: admin@canoabahia.com.br # Email para o primeiro usuário admin
      ADMIN_PASSWORD: senha_admin_directus # MUDE ISTO! Senha para o primeiro usuário admin
      PUBLIC_URL: https://cadastro.bambivis.com # URL pública que o Directus usará
      # Caching
      CACHE_ENABLED: 'true'
      CACHE_STORE: memory # Redis é melhor para produção, mas memory é simples para iniciar
      # CORS
      CORS_ENABLED: 'true'
      CORS_ORIGIN: https://cadastro.bambivis.com,https://app.bambivis.com,http://localhost:3000 # Adicione URLs do seu frontend aqui, incluindo localhost para dev.
    depends_on:
      - canoabahia_db
    networks:
      - canoabahia_network
      - proxy # O Directus precisa estar na mesma rede 'proxy' que o NGINX Proxy Manager

  # Bootpress (previsto para o futuro)
  # Este serviço usará a mesma rede interna 'canoabahia_network' para acessar o 'canoabahia_db'
  # e poderá ser conectado ao NGINX Proxy Manager se precisar de acesso externo.
  # bootpress:
  #   image: seu_bootpress_image_aqui # Ex: bootpress/bootpress:latest
  #   container_name: bootpress
  #   restart: unless-stopped
  #   environment:
  #     DB_CLIENT: pg
  #     DB_HOST: canoabahia_db # Bootpress também pode usar o canoabahia_db
  #     DB_DATABASE: canoabahia_crm
  #     DB_USER: canoabahia_user
  #     DB_PASSWORD: amelofil90 # Use a mesma senha do banco ou crie um usuário específico
  #     # Outras variáveis de ambiente do Bootpress
  #   depends_on:
  #     - canoabahia_db
  #   networks:
  #     - canoabahia_network
      # - proxy # Descomente se o Bootpress precisar ser acessível via NGINX Proxy Manager no futuro

volumes:
  canoabahia_db_data: # Volume para persistir os dados do PostgreSQL

networks:
  canoabahia_network: # Rede interna para serviços da aplicação (Postgres, Directus, Bootpress)
    driver: bridge
  proxy: # Rede externa para o NGINX Proxy Manager (já existe)
    external: true
    # name: proxy # Não é necessário especificar 'name' se a rede já foi criada externamente com esse nome
